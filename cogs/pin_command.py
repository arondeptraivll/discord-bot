import discord
from discord.ext import commands

class PinCommand(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        
    async def check_permissions(self, ctx):
        if ctx.author.guild_permissions.administrator:
            return True
        supporter_role = discord.utils.get(ctx.guild.roles, name="Supporter")
        return supporter_role and supporter_role in ctx.author.roles

    @commands.command(name='pin')
    async def pin_message(self, ctx, *, message_content: str):
        try:
            # S·ª¨A ·ªû ƒê√ÇY: Th√™m 'discord.NotFound' v√†o kh·ªëi try-except
            await ctx.message.delete()
        except (discord.Forbidden, discord.NotFound):
            # N·∫øu kh√¥ng c√≥ quy·ªÅn ho·∫∑c tin nh·∫Øn ƒë√£ b·ªã x√≥a, th√¨ b·ªè qua v√† ti·∫øp t·ª•c
            pass

        if not await self.check_permissions(ctx):
            await ctx.send("‚ö†Ô∏è B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.", delete_after=2)
            return

        if ctx.channel.id in self.bot.pinned_messages:
            await ctx.send("‚ö†Ô∏è K√™nh n√†y ƒë√£ c√≥ m·ªôt tin nh·∫Øn ƒë∆∞·ª£c ghim. D√πng `?stoppin` ƒë·ªÉ g·ª°.", delete_after=2)
            return

        formatted_content = f"## üìåPinned Messege\n\n{message_content}"
        pinned_msg = await ctx.send(formatted_content)
        
        self.bot.pinned_messages[ctx.channel.id] = {
            'message_id': pinned_msg.id, 
            'content': formatted_content
        }
    
    @pin_message.error
    async def pin_error(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            try:
                await ctx.message.delete()
            except (discord.Forbidden, discord.NotFound):
                pass
            await ctx.send("Vui l√≤ng nh·∫≠p n·ªôi dung tin nh·∫Øn. V√≠ d·ª•: `?pin N·ªôi dung c·ªßa b·∫°n`", delete_after=2)

async def setup(bot):
    await bot.add_cog(PinCommand(bot))
